# Simple workflow for deploying static content to GitHub Pages
name: Deploy dev build on main push

on:
    # Runs on pushes targeting the default branch
    push:
        branches: [main]
    pull_request:
        branches: [main]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:

    # Single deploy job since we're just deploying
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        strategy:
          matrix:
            node-version: [20.x]    
        steps:
            - name: Checkout
              uses: actions/checkout@v3
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
            - id: get-repo-values
              run: |
                  url=https://$(echo "${{github.repository}}" | sed "s/\//.github.io\//")
                  echo "url=$url" >> $GITHUB_OUTPUT
            - name: Update package.json homepage
              uses: jossef/action-set-json-field@v1
              with:
                  file: package.json
                  field: homepage
                  value: ${{ steps.get-repo-values.outputs.url }}
            - name: Install
              run: |
                  npm install
            # TODO: Set up linter
            - run: npm run lint
            - name: Build
              run: |
                  npm run build
            - run: echo "<html><head><meta http-equiv='refresh' content='0; URL=${{github.server_url}}/${{github.repository}}' /></head><body>Redirecting to repository</body></html>" > ./dist/github.html
            - name: Create GitInspector Report
              run: |
                  # pushd ~ &> /dev/null
                  git clone https://github.com/jpwhite3/gitinspector.git
                  # cd gitinspector
                  # echo "export PATH=$(pwd):"'$PATH' >> ~/.profile
                  # popd &> /dev/null
                  # source ~/.profile
                  # git clone ${{github.server_url}}/${{github.repository}} original-src/
                  # cd original-src
                  # python ../gitinspector/gitinspector.py ./ -f tsx,ts --grading -F html -x ./gitinspector > ../dist/report.html
                  # source ~/.profile
                  # export PYTHONIOENCODING=utf-8
                  # echo "Running for commit : $GITHUB_SHA"
                  # python gitinspector.py --version
                  echo "============ Git Inspector ==========="
                  # python gitinspector.py ./ -f tsx,ts --grading -F html -x ./gitinspector > ../dist/report.html
                  # gitinspector.py ./src/ --grading --format=html -f tsx,ts,html,css -x > ./dist/report.html
                  python ./gitinspector/gitinspector.py ./src/ --grading --format=html -f tsx,ts,html,css -x ./gitinspector > ./dist/report.html
                  echo "======================================"
            - name: Copy over index.md to docs/
              run: |
                  cp README.md docs/index.md
            - name: Generate HTML from Markdown for EGDD
              uses: ldeluigi/markdown-docs@latest
              with:
                  src: docs
                  dst: dist/docs/
            - name: Setup Pages
              uses: actions/configure-pages@v3
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v2
              with:
                  # Upload entire repository
                  path: "dist/"
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v2
